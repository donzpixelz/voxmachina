__author__ = 'rcj1492'
__created__ = '2016.06'
__license__ = 'MIT'

from labpack.records.id import labID

def requestDeconstructor(request_object, session_object=None, request_channel=''):

    '''
        a method for mapping the components of a request into an observation

        NOTE:   method is mostly a placeholder funnel for future validation
                processes, request logging, request context building and
                counter-measures for the nasty web

    :param request_object: request object generated by flask from request route
    :param session_object: session object generated by flask from client cookie
    :param request_channel: string with channel type of client request
    :return: dictionary with observation fields
    '''

# construct empty fields
    status_code = 200
    record_id = labID()
    observation_dict = {
        'event': 'observation',
        'dt': record_id.epoch,
        'interface_id': '',
        'interface_details': {
            'channel': request_channel
        },
        'record_id': record_id.id48,
        'event_details': {}
    }
    request_details = {
        'request_channel': request_channel,
        'user_id': '',
        'headers': {},
        'form': {},
        'fields': {},
        'json': None,
        'data': None
    }

# retrieve user id if user has been verified
    if 'user_id' in session_object:
        request_details['user_id'] = session_object['user_id']

# automatically add header and query field data (args is insecure method for i/o)
    for key, value in request_object.headers.items():
        request_details['headers'][key] = value
    for key, value in request_object.args.items():
        request_details['fields'][key] = value

# add body appropriate field based upon content type
    try:
        request_details['json'] = request_object.get_json(silent=True)
    except:
        pass
    try:
        for key, value in request_object.form.items():
            request_details['form'][key] = value
    except:
        pass
    try:
        request_details['data'] = request_object.data
    except:
        pass

# add request details to observation map
    observation_dict['event_details'] = request_details
    
    return observation_dict, status_code